## Process this file with automake to produce Makefile.in

AUTOMAKE_OPTIONS = 1.5 subdir-objects
ACLOCAL_AMFLAGS = -I m4

LIBTOOL = @LIBTOOL@ $(QUIET:y=--quiet)

INCLUDES =
bin_PROGRAMS =
check_PROGRAMS =
TESTS =
EXTRA_DIST =
nobase_dist_pkgdata_DATA =

AM_LDFLAGS = $(NO_UNDEFINED)

AM_CXXFLAGS += $(XAPIAN_CXXFLAGS)

noinst_LIBRARIES =
noinst_HEADERS =

include libs/Makefile.mk
include src/Makefile.mk
include src/cli/Makefile.mk
include src/dbgroup/Makefile.mk
include src/features/Makefile.mk
include src/httpserver/Makefile.mk
# include src/importer/filesystem/Makefile.mk
include src/importer/mongo/Makefile.mk
include src/jsonmanip/Makefile.mk
include src/jsonxapian/Makefile.mk
include src/logger/Makefile.mk
include src/matchspies/Makefile.mk
include src/postingsources/Makefile.mk
include src/ngramcat/Makefile.mk
include src/rest/Makefile.mk
include src/server/Makefile.mk
include src/utils/Makefile.mk
include perftest/Makefile.mk
include unittests/Makefile.mk

SUBDIRS = libs/libmicrohttpd .

DISTCHECK_CONFIGURE_FLAGS = "XAPIAN_CONFIG=$(XAPIAN_CONFIG)"

EXTRA_DIST += \
 examples/lang_guess_model.json \
 examples/schema.json \
 scripts/get_wikipedia_sample_text \
 docs/categorisation.rst \
 docs/clients.rst \
 docs/collections.rst \
 docs/conf.py \
 docs/index.rst \
 docs/install.rst \
 docs/intro.rst \
 docs/Makefile \
 docs/requirements.txt \
 docs/search_json.rst \
 docs/urls.rst

nobase_dist_pkgdata_DATA += \
 static/index.html \
 static/static/browse/browse.js \
 static/static/browse/index.html \
 static/static/lib/jquery-1.6.1.min.js \
 static/static/status/index.html \
 static/static/status/status.js

# FIXME - setup these tools in configure.
SPHINXBUILD   = sphinx-build
GIT           = git

# Internal variables.
ALLSPHINXOPTS   = -d $(top_builddir)/docs/_build/doctrees $(top_srcdir)/docs/

.PHONY:
	sphinx-docs

sphinx-docs:
	pip install -r $(top_srcdir)/docs/requirements.txt
	$(SPHINXBUILD) -b html $(ALLSPHINXOPTS) $(top_builddir)/docs/_build/html
	

dist-hook: sphinx-docs
	@if test -d "$(srcdir)/.git"; \
	then \
		echo Creating ChangeLog && \
		( cd "$(top_srcdir)" && \
		  echo '# Generated by Makefile. Do not edit.'; echo; \
		  $(GIT) log | grep -v '^commit ') > ChangeLog.tmp \
		&& mv -f ChangeLog.tmp $(distdir)/ChangeLog \
		|| ( rm -f ChangeLog.tmp ; \
		     echo Failed to generate ChangeLog >&2 ); \
	else \
		echo A git clone is required to generate a ChangeLog >&2; \
	fi
	mkdir "$(distdir)/docs/html" \
	&& cp -r $(top_builddir)/docs/_build/html/* "$(distdir)/docs/html"
