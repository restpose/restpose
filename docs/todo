TODO
====

Before an initial release
-------------------------

 - Update index.rst - wildly out of date (talks about jxd and jx.py)

 - Write docs/urls.rst - content in there currently is worthless, needs
   rewriting from scratch.  Must describe all possible urls, the expected
   content type and parameters, and the possible normal return types.  In
   particular, details about how methods which queue tasks will report high
   load on the queues, an no space on the queues.

 - Test passing double values (both positive and negative) to timestamp fields.

 - Python client could do with testing for expired checkpoints.

 - Collection names should not be allowed to contain ":/\." or tab characters.
   Validation should be performed in handlers to return clear error messages,
   and also in CollectionPool to ensure internal calls obey the restrictions too.

 - Make logging do writes asynchronously.  (Currently, a log call acquires the
   logger mutex, then does the write, blocking all other threads.  Instead, log
   messages should be added to a queue, and a logger thread should write them
   to disk, syslog, or whatever the appropriate target is.)

 - General documentation review and tidyup.

 - Update libs/README

 - Update README

 - Rename "prefix" to something less implementation-specific?  "group"?  Define
   group shortnames somewhere special?

 - If the client doesn't send a Host header, we need to synthesise one so that
   Location headers in responses are valid.

Future
------

 - Needs to be possible to long-poll for checkpoints when waiting for them to
   be reached.  Probably with a timeout, defaulting to 30 seconds.

 - Fix inconsistent namespacing used in code (RestPose is used in some places,
   but not others, for no particular reason).

 - Deleting a collection should wait for all readers on that collection to
   finish, to avoid problems on windows (and to handle deletes more
   gracefully).

 - Position data for multiple text fields should not overlap - and there should
   be a setting to define the spacing.

 - Add geospatial index support.

 - Add faceting support.

 - Add sort_by support.

 - Add collapse support.

 - Add ability to set weighting scheme / parameters.

 - Python bindings - add an easy way to be notified of the queries performed in
   a session, and document how to hook that into Django's debug views.

To think about
--------------

 - Document -> JSON formatting should have two flavours: a "raw" mode, which
   doesn't unpack the document data, and a higher level mode which unpacks the
   document data, and also splits terms into prefix and value stored.

